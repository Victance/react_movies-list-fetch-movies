{"version":3,"sources":["components/MovieCard/MovieCard.tsx","components/MoviesList/MoviesList.tsx","components/FindMovie/FindMovie.tsx","api.ts","App.tsx","index.tsx"],"names":["MovieCard","movie","className","src","imgUrl","alt","title","description","href","imdbUrl","MoviesList","movies","map","imdbId","FindMovie","addNewMovie","useState","searchQuery","setSearchQuery","hasSearchError","setSearchErrorState","newMovie","setNewMovie","isLoading","setLoading","onSubmit","event","query","preventDefault","fetch","then","res","json","catch","Response","Error","data","imdbID","Poster","Plot","Title","finally","htmlFor","type","id","placeholder","value","classNames","onChange","target","disabled","onClick","App","setMovies","find","ReactDOM","render","document","getElementById"],"mappings":"8TAQaA,EAA6B,SAAC,GAAD,IAAGC,EAAH,EAAGA,MAAH,OACxC,sBAAKC,UAAU,OAAO,UAAQ,YAA9B,UACE,qBAAKA,UAAU,aAAf,SACE,wBAAQA,UAAU,gBAAlB,SACE,qBACE,UAAQ,cACRC,IAAKF,EAAMG,OACXC,IAAI,kBAIV,sBAAKH,UAAU,eAAf,UACE,sBAAKA,UAAU,QAAf,UACE,qBAAKA,UAAU,aAAf,SACE,wBAAQA,UAAU,iBAAlB,SACE,qBACEC,IAAI,wBACJE,IAAI,aAIV,qBAAKH,UAAU,gBAAf,SACE,mBAAGA,UAAU,aAAa,UAAQ,aAAlC,SAAgDD,EAAMK,aAI1D,sBAAKJ,UAAU,UAAU,UAAQ,mBAAjC,UACGD,EAAMM,YACP,uBACA,mBAAGC,KAAMP,EAAMQ,QAAS,UAAQ,WAAhC,4BC3BKC,EAA8B,SAAC,GAAD,IAAGC,EAAH,EAAGA,OAAH,OACzC,qBAAKT,UAAU,SAAf,SACGS,EAAOC,KAAI,SAAAX,GAAK,OACf,cAAC,EAAD,CAEEA,MAAOA,GADFA,EAAMY,c,0BCHNC,EAA6B,SAAC,GAAqB,IAAnBC,EAAkB,EAAlBA,YAC3C,EAAsCC,mBAAS,IAA/C,mBAAOC,EAAP,KAAoBC,EAApB,KACA,EAA8CF,oBAAS,GAAvD,mBAAOG,EAAP,KAAuBC,EAAvB,KACA,EAAgCJ,mBAAuB,MAAvD,mBAAOK,EAAP,KAAiBC,EAAjB,KACA,EAAgCN,oBAAS,GAAzC,mBAAOO,EAAP,KAAkBC,EAAlB,KA0CA,OACE,qCACE,uBAAMtB,UAAU,aAAauB,SA1CZ,SAACC,GCZjB,IAAkBC,EDarBD,EAAME,iBAENJ,GAAW,ICfUG,EDiBZV,EChBJY,MAAM,GAAD,OAHE,0CAGF,cAAiBF,IAC1BG,MAAK,SAAAC,GAAG,OAAIA,EAAIC,UAChBC,OAAM,iBAAO,CACZC,SAAU,QACVC,MAAO,wBDaNL,MAAK,SAAAM,GACA,UAAWA,EACbhB,GAAoB,GAKtBE,EAAY,CACVT,OAAQuB,EAAKC,OACbjC,OAAwB,QAAhBgC,EAAKE,OACT,4DACAF,EAAKE,OACT7B,QAAQ,8BAAD,OAAgC2B,EAAKC,QAC5C9B,YAA2B,QAAd6B,EAAKG,KACd,GACAH,EAAKG,KACTjC,MAAO8B,EAAKI,WAEbC,SAAQ,WACTjB,GAAW,OAiBb,UACE,sBAAKtB,UAAU,QAAf,UACE,uBAAOA,UAAU,QAAQwC,QAAQ,cAAjC,yBAIA,qBAAKxC,UAAU,UAAf,SACE,uBACE,UAAQ,aACRyC,KAAK,OACLC,GAAG,cACHC,YAAY,0BACZC,MAAO7B,EACPf,UAAW6C,IAAW,QAAS,CAC7B,YAAa5B,IAEf6B,SAAU,SAACtB,GACTR,EAAeQ,EAAMuB,OAAOH,OAC5B1B,GAAoB,QAKzBD,GACC,mBAAGjB,UAAU,iBAAiB,UAAQ,eAAtC,qDAMJ,sBAAKA,UAAU,mBAAf,UACE,qBAAKA,UAAU,UAAf,SACE,wBACE,UAAQ,eACRyC,KAAK,SACLzC,UAAW6C,IAAW,kBAAmB,CACvC,aAAcxB,IAEhB2B,UAAWjC,EANb,SAQGI,EAAW,eAAiB,mBAIhCA,GACC,qBAAKnB,UAAU,UAAf,SACE,wBACE,UAAQ,YACRyC,KAAK,SACLzC,UAAU,oBACViD,QA/DG,WACV9B,IAILN,EAAYM,GACZH,EAAe,IACfI,EAAY,MACZF,GAAoB,KAmDV,qCAcR,qBAAKlB,UAAU,YAAY,UAAQ,mBAAnC,SACGmB,GACC,qCACE,oBAAInB,UAAU,QAAd,qBACA,cAAC,EAAD,CAAWD,MAAOoB,aErHjB+B,EAAM,WACjB,MAA4BpC,mBAAkB,IAA9C,mBAAOL,EAAP,KAAe0C,EAAf,KAUA,OACE,sBAAKnD,UAAU,OAAf,UACE,qBAAKA,UAAU,eAAf,SACE,cAAC,EAAD,CAAYS,OAAQA,MAGtB,qBAAKT,UAAU,UAAf,SACE,cAAC,EAAD,CAAWa,YAfG,SAACM,GACfV,EAAO2C,MAAK,SAAArD,GAAK,OAAIA,EAAMY,SAAWQ,EAASR,WAInDwC,EAAU,GAAD,mBAAK1C,GAAL,CAAaU,cCV1BkC,IAASC,OAAO,cAAC,EAAD,IAASC,SAASC,eAAe,W","file":"static/js/main.cea3c3e8.chunk.js","sourcesContent":["import React from 'react';\nimport { Movie } from '../../types/Movie';\nimport './MovieCard.scss';\n\ntype Props = {\n  movie: Movie,\n};\n\nexport const MovieCard: React.FC<Props> = ({ movie }) => (\n  <div className=\"card\" data-cy=\"movieCard\">\n    <div className=\"card-image\">\n      <figure className=\"image is-4by3\">\n        <img\n          data-cy=\"moviePoster\"\n          src={movie.imgUrl}\n          alt=\"Film logo\"\n        />\n      </figure>\n    </div>\n    <div className=\"card-content\">\n      <div className=\"media\">\n        <div className=\"media-left\">\n          <figure className=\"image is-48x48\">\n            <img\n              src=\"images/imdb-logo.jpeg\"\n              alt=\"imdb\"\n            />\n          </figure>\n        </div>\n        <div className=\"media-content\">\n          <p className=\"title is-8\" data-cy=\"movieTitle\">{movie.title}</p>\n        </div>\n      </div>\n\n      <div className=\"content\" data-cy=\"movieDescription\">\n        {movie.description}\n        <br />\n        <a href={movie.imdbUrl} data-cy=\"movieURL\">\n          IMDB\n        </a>\n      </div>\n    </div>\n  </div>\n);\n","import React from 'react';\n\nimport './MoviesList.scss';\nimport { MovieCard } from '../MovieCard';\nimport { Movie } from '../../types/Movie';\n\ntype Props = {\n  movies: Movie[];\n};\n\nexport const MoviesList: React.FC<Props> = ({ movies }) => (\n  <div className=\"movies\">\n    {movies.map(movie => (\n      <MovieCard\n        key={movie.imdbId}\n        movie={movie}\n      />\n    ))}\n  </div>\n);\n","import classNames from 'classnames';\nimport React, { useState } from 'react';\nimport { getMovie } from '../../api';\nimport { Movie } from '../../types/Movie';\nimport { MovieCard } from '../MovieCard';\nimport './FindMovie.scss';\n\ntype Props = {\n  addNewMovie:(newMovie: Movie) => void\n};\n\nexport const FindMovie: React.FC<Props> = ({ addNewMovie }) => {\n  const [searchQuery, setSearchQuery] = useState('');\n  const [hasSearchError, setSearchErrorState] = useState(false);\n  const [newMovie, setNewMovie] = useState<Movie | null>(null);\n  const [isLoading, setLoading] = useState(false);\n\n  const handleSubmit = (event: React.FormEvent) => {\n    event.preventDefault();\n\n    setLoading(true);\n\n    getMovie(searchQuery)\n      .then(data => {\n        if ('Error' in data) {\n          setSearchErrorState(true);\n\n          return;\n        }\n\n        setNewMovie({\n          imdbId: data.imdbID,\n          imgUrl: data.Poster === 'N/A'\n            ? 'https://via.placeholder.com/360x270.png?text=no%20preview'\n            : data.Poster,\n          imdbUrl: `https://www.imdb.com/title/${data.imdbID}`,\n          description: data.Plot === 'N/A'\n            ? ''\n            : data.Plot,\n          title: data.Title,\n        });\n      }).finally(() => {\n        setLoading(false);\n      });\n  };\n\n  const addMovie = () => {\n    if (!newMovie) {\n      return;\n    }\n\n    addNewMovie(newMovie);\n    setSearchQuery('');\n    setNewMovie(null);\n    setSearchErrorState(false);\n  };\n\n  return (\n    <>\n      <form className=\"find-movie\" onSubmit={handleSubmit}>\n        <div className=\"field\">\n          <label className=\"label\" htmlFor=\"movie-title\">\n            Movie title\n          </label>\n\n          <div className=\"control\">\n            <input\n              data-cy=\"titleField\"\n              type=\"text\"\n              id=\"movie-title\"\n              placeholder=\"Enter a title to search\"\n              value={searchQuery}\n              className={classNames('input', {\n                'is-dander': hasSearchError,\n              })}\n              onChange={(event) => {\n                setSearchQuery(event.target.value);\n                setSearchErrorState(false);\n              }}\n            />\n          </div>\n\n          {hasSearchError && (\n            <p className=\"help is-danger\" data-cy=\"errorMessage\">\n              Can&apos;t find a movie with such a title\n            </p>\n          )}\n        </div>\n\n        <div className=\"field is-grouped\">\n          <div className=\"control\">\n            <button\n              data-cy=\"searchButton\"\n              type=\"submit\"\n              className={classNames('button is-light', {\n                'is-loading': isLoading,\n              })}\n              disabled={!searchQuery}\n            >\n              {newMovie ? 'Search again' : 'Find a movie'}\n            </button>\n          </div>\n\n          {newMovie && (\n            <div className=\"control\">\n              <button\n                data-cy=\"addButton\"\n                type=\"button\"\n                className=\"button is-primary\"\n                onClick={addMovie}\n              >\n                Add to the list\n              </button>\n            </div>\n          )}\n\n        </div>\n      </form>\n\n      <div className=\"container\" data-cy=\"previewContainer\">\n        {newMovie && (\n          <>\n            <h2 className=\"title\">Preview</h2>\n            <MovieCard movie={newMovie} />\n          </>\n        )}\n      </div>\n    </>\n  );\n};\n","import { MovieData } from './types/MovieData';\nimport { ResponseError } from './types/ReponseError';\n\nconst API_URL = 'https://www.omdbapi.com/?apikey=d049b4a';\n\nexport function getMovie(query: string): Promise<MovieData | ResponseError> {\n  return fetch(`${API_URL}&t=${query}`)\n    .then(res => res.json())\n    .catch(() => ({\n      Response: 'False',\n      Error: 'unexpected error',\n    }));\n}\n","import { useState } from 'react';\nimport './App.scss';\nimport { MoviesList } from './components/MoviesList';\nimport { FindMovie } from './components/FindMovie';\nimport { Movie } from './types/Movie';\n\nexport const App = () => {\n  const [movies, setMovies] = useState<Movie[]>([]);\n\n  const addNewMovie = (newMovie: Movie) => {\n    if (movies.find(movie => movie.imdbId === newMovie.imdbId)) {\n      return;\n    }\n\n    setMovies([...movies, newMovie]);\n  };\n\n  return (\n    <div className=\"page\">\n      <div className=\"page-content\">\n        <MoviesList movies={movies} />\n      </div>\n\n      <div className=\"sidebar\">\n        <FindMovie addNewMovie={addNewMovie} />\n      </div>\n    </div>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport 'bulma/css/bulma.css';\nimport { App } from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}